#!/bin/bash

{% macro section(text) -%}
cat <<EOF
###############################################################################
# {{text}}
###############################################################################
EOF
{%- endmacro%}

{{section("config")}}
set -e

export DEBIAN_FRONTEND=noninteractive

{{section("Resources")}}
sudo -su user mkdir -p ~user/resources
{% for resource in resources %}
sudo -su user base64 -d > ~user/resources/{{resource.file}} << EOF
{{resource.data}}
EOF
{%endfor%}

{{section("Wifi")}}
{% if wifi.ssid | length %}
nmcli r wifi on
nmcli d wifi connect {{wifi.ssid}} password {{wifi.pw}}
{% endif %}

{{section("eth0")}}
NM_CONF_DIR="/etc/NetworkManager/system-connections/"
{% for cfg in nm_configs %}
cat >$NM_CONF_DIR/{{cfg.file}} <<EOF
{{cfg.content}}
EOF
# NetworkManager is really strict about this
chmod 600 $NM_CONF_DIR/{{cfg.file}}
{%endfor%}

{{section("/etc/profile.d")}}
cat > /etc/profile.d/local-path.sh << EOF
export PATH="~/.local/bin:$PATH"
EOF

{{section("Apt packages")}}
apt install -y libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libsdl2-dev \
  libsqlite3-dev libssl-dev libboost-dev libfmt-dev
apt install -y rclone python3 python3-pip weston
apt install -y vim meson ninja-build git cmake

{% if plai | length %}
{{section("Compile plai")}}
sudo -iu user << EOF
set -e
#export PATH="~/.local/bin:$PATH"
[ -d ~/code/plai ] || (mkdir -p ~/code && git clone https://github.com/tlammi/plai.git ~/code/plai)
cd ~/code/plai
git fetch
git checkout {{plai}}
meson setup --optimization=3 --default-library=static -Dtests=false build 
ninja -C build
EOF
{% endif %}

{{section("Install plai")}}
sudo -iu user sh -c 'sudo ninja -C ~user/code/plai/build install'

{% if mplayer | length %}
{{section("Install mplayer")}}
sudo -su user pip install --user --break-system-packages "git+https://github.com/tlammi/mplayer.git@{{mplayer}}"
{{section("Install mplayer configs")}}
sudo -su user mkdir -p ~user/.config/mplayer
sudo -su user cat > ~user/.config/mplayer/config.toml << EOF
{{mplayer_conf}} 
EOF
sudo -su user cat > ~user/.config/mplayer/schedule.toml << EOF
{{mplayer_sched}}
EOF
{% endif %}

{% if rclone | length %}
{{section("Generate rclone script")}}
rm -f /usr/bin/rclone-drive.sh
cat > /usr/bin/rclone-drive.sh << 'EOF'
#!/bin/bash
set -eu
rclone sync --drive-shared-with-me "{{rclone}}:$1" "$2"
EOF
chmod +x /usr/bin/rclone-drive.sh
{{section("Configure rclone")}}
sudo -su user mkdir -p ~user/.config/rclone
sudo -su user cat > ~user/.config/rclone/rclone.conf << EOF
{{rclone_cfg}}
EOF
{% else %}
ln -s /bin/false /usr/bin/rclone-drive.sh || true
{% endif %}

{{section("Populating weston.ini")}}
sudo -su user mkdir -p ~user/.config
sudo -su user cat > ~user/.config/weston.ini << EOF
{{weston_ini}}
EOF


{{section("Systemd units")}}
SYSTEMD_UNIT_DIR="/etc/systemd"
{% for unit in units %}
mkdir -p "$(dirname "$SYSTEMD_UNIT_DIR/{{unit.file}}")"
cat >$SYSTEMD_UNIT_DIR/{{unit.file}} <<EOF
{{unit.content}}
EOF
{% endfor %}

{{section("Enable systemd units")}}
{% macro systemd_user(args) -%}
systemctl -M user@ --user {{args}}
{% endmacro -%}

{{systemd_user("enable plai.service")}}
{{systemd_user("enable rclone-sync.service")}}
{{systemd_user("enable rclone-sync.timer")}}
{{systemd_user("enable mplayer.service")}}

{{section("Done")}}
